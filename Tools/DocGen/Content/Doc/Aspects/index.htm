<p class="j">All BLToolkit aspects are implemented as attributes and have to be applied to 
abstract or virtual members of an abstract class. 
You need to use <b>TypeAccessor&lt;T&gt;.CreateInstance()</b> method to create an instance of the class. 
BLToolkit class builder creates an actual class and applies aspects to abstract and virtual members 
by overriding the members and emitting (see <b>System.Reflection.Emit</b> namespace) 
additional code around them.
</p>
<ct_table>
<ct_hr>
<ct_item link='AsyncAspect.htm'       label='Async aspect'      /><ct_hr>
<ct_text>Cache aspect</ct_text>
<ct_item link='CacheAspect.htm'       label='Cache aspect'      />
<ct_item link='NoCacheAttribute.htm'  label='NoCache attribute' />
<ct_item link='ClearCacheAspect.htm'  label='ClearCache aspect' /><ct_hr>
<ct_item link='CounterAspect.htm'     label='Counter aspect'    /><ct_hr>
<ct_item link='LoggingAspect.htm'     label='Logging aspect'    /><ct_hr>
<ct_item link='MixinAspect.htm'       label='Mixin aspect'      /><ct_hr>
<ct_item link='NotNullAttribute.htm'  label='NotNull attribute' /><ct_hr>
<ct_item link='OverloadAspect.htm'    label='Overload aspect'   /><ct_hr>
</ct_table>
